{"ast":null,"code":"import { EventEmitter } from '@angular/core';\n// import { CommonModule } from '@angular/common';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/customer.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"src/app/service/snackbar.service\";\nimport * as i5 from \"@angular/material/toolbar\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/common\";\nfunction CustomerComponent_mat_error_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_mat_error_16_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, CustomerComponent_mat_error_16_span_1_Template, 2, 0, \"span\", 10);\n    i0.ɵɵtemplate(2, CustomerComponent_mat_error_16_span_2_Template, 2, 0, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.customerForm.controls.username.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.customerForm.controls.username.errors.pattern);\n  }\n}\nfunction CustomerComponent_mat_error_22_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_mat_error_22_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, CustomerComponent_mat_error_22_span_1_Template, 2, 0, \"span\", 10);\n    i0.ɵɵtemplate(2, CustomerComponent_mat_error_22_span_2_Template, 2, 0, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerForm.controls.contactNumber.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerForm.controls.contactNumber.errors.pattern);\n  }\n}\nfunction CustomerComponent_mat_error_28_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_mat_error_28_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, CustomerComponent_mat_error_28_span_1_Template, 2, 0, \"span\", 10);\n    i0.ɵɵtemplate(2, CustomerComponent_mat_error_28_span_2_Template, 2, 0, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.customerForm.controls.address.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.customerForm.controls.address.errors.pattern);\n  }\n}\n// import { CategoryService } from 'src/app/service/category.service';\nexport let CustomerComponent = /*#__PURE__*/(() => {\n  class CustomerComponent {\n    // categorys: any = [];\n    constructor(dialogData, forBuilder, customerService,\n    // private categoryService: CategoryService,\n    dialogRef, snackBarService) {\n      this.dialogData = dialogData;\n      this.forBuilder = forBuilder;\n      this.customerService = customerService;\n      this.dialogRef = dialogRef;\n      this.snackBarService = snackBarService;\n      this.onAddCustomer = new EventEmitter();\n      this.onEditCustomer = new EventEmitter();\n      this.customerForm = FormGroup;\n      this.dialogAction = \"Add\";\n      this.action = \"Add\";\n    }\n    ngOnInit() {\n      this.customerForm = this.forBuilder.group({\n        username: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n        contactNumber: [null, [Validators.required]],\n        address: [null, [Validators.required]]\n      });\n      if (this.dialogData.action === 'Edit') {\n        this.dialogAction = \"Edit\";\n        this.action = \"Update\";\n        this.customerForm.patchValue(this.dialogData.data);\n      }\n    }\n    handleSubmit() {\n      if (this.dialogAction === \"Edit\") {\n        this.edit();\n      } else {\n        this.add();\n      }\n    }\n    add() {\n      var formData = this.customerForm.value;\n      var data = {\n        username: formData.username,\n        contactNumber: formData.contactNumber,\n        address: formData.address\n      };\n      this.customerService.add(data).subscribe(response => {\n        this.dialogRef.close();\n        this.onAddCustomer.emit();\n        this.responseMessage = response.message;\n        this.snackBarService.openSnackBar(this.responseMessage, \"Success\");\n      }, error => {\n        var _a, _b;\n        this.dialogRef.close();\n        console.log(error);\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    edit() {\n      var formData = this.customerForm.value;\n      var data = {\n        id: this.dialogData.data.id,\n        username: formData.username,\n        contactNumber: formData.contactNumber,\n        address: formData.address\n      };\n      this.customerService.update(data).subscribe(response => {\n        this.dialogRef.close();\n        this.onEditCustomer.emit();\n        this.responseMessage = response.message;\n        this.snackBarService.openSnackBar(this.responseMessage, \"Success\");\n      }, error => {\n        var _a, _b;\n        this.dialogRef.close();\n        console.log(error);\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n  }\n  CustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n    return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.SnackbarService));\n  };\n  CustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomerComponent,\n    selectors: [[\"app-customer\"]],\n    decls: 38,\n    vars: 7,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", 1, \"mat-dialog-close\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"fxLayout\", \"row wrap\"], [\"appearance\", \"standard\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"contactNumber\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"address\", \"required\", \"\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\"]],\n    template: function CustomerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"span\", 2);\n        i0.ɵɵelementStart(5, \"button\", 3)(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"close\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(8, \"mat-dialog-content\", 4)(9, \"form\", 5)(10, \"div\", 6)(11, \"div\", 7)(12, \"mat-form-field\", 8)(13, \"mat-label\");\n        i0.ɵɵtext(14, \" Name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵtemplate(16, CustomerComponent_mat_error_16_Template, 3, 2, \"mat-error\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 7)(18, \"mat-form-field\", 8)(19, \"mat-label\");\n        i0.ɵɵtext(20, \" Contact Number \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵtemplate(22, CustomerComponent_mat_error_22_Template, 3, 2, \"mat-error\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 7)(24, \"mat-form-field\", 8)(25, \"mat-label\");\n        i0.ɵɵtext(26, \" Address \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 12);\n        i0.ɵɵtemplate(28, CustomerComponent_mat_error_28_Template, 3, 2, \"mat-error\", 10);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(29, \"mat-dialog-actions\", 13)(30, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function CustomerComponent_Template_button_click_30_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵelementStart(31, \"mat-icon\");\n        i0.ɵɵtext(32, \"save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 15)(35, \"mat-icon\");\n        i0.ɵɵtext(36, \"cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(37, \" Close \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.dialogData.action, \" Customer\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.customerForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.customerForm.controls.username.touched && ctx.customerForm.controls.username.invalid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.customerForm.controls.contactNumber.touched && ctx.customerForm.controls.contactNumber.invalid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.customerForm.controls.address.touched && ctx.customerForm.controls.address.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !(ctx.customerForm.valid && ctx.customerForm.dirty));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.action, \" \");\n      }\n    },\n    directives: [i5.MatToolbar, i5.MatToolbarRow, i6.DefaultLayoutDirective, i7.MatButton, i3.MatDialogClose, i8.MatIcon, i3.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.DefaultFlexDirective, i9.MatFormField, i9.MatLabel, i10.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i11.NgIf, i9.MatError, i3.MatDialogActions],\n    styles: [\".mat-toolbar[_ngcontent-%COMP%]{margin:-24px -24px 10px;width:auto}mat-form-field[_ngcontent-%COMP%]{padding:5px}\"]\n  });\n  return CustomerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}